/////////////////////////////////////////////////////////////////////
// File: ScoreManager.h
// DSA2 PokemanSafari_M1
// Authors:
//      Ilan Isakov
//		Marty Kurtz
//		Mary Spencer
//
// Description:
//
/////////////////////////////////////////////////////////////////////

#ifndef _SCOREMANAGER_H_
#define _SCOREMANAGER_H_

#include "RE\ReEng.h"

class ScoreManager
{
private:
	//Singleton Instance
	static ScoreManager* inst;

	//Internal Score Msg Struct
	typedef struct{
		int           TTL;
		ReEng::String msg;
	} SCORE_MSG;
	//Score Msg Queue to display on screen
	std::vector<SCORE_MSG*> scoreQueue;

	int scoreCount;                         //score total
	std::vector<int> scoreObjects;          //score increments

	MeshManagerSingleton* m_pMeshMngr;      

	/////////////////////////////////////////////////////////////////
	//  ScoreManager() - Private singleton constructor
	/////////////////////////////////////////////////////////////////
	ScoreManager();

	/////////////////////////////////////////////////////////////////
	// Copy Constructor
	/////////////////////////////////////////////////////////////////
	ScoreManager(ScoreManager const& other);

	/////////////////////////////////////////////////////////////////
	//  Copy Assignment Operator
	/////////////////////////////////////////////////////////////////
	ScoreManager& operator=(ScoreManager const& other);

	/////////////////////////////////////////////////////////////////
	// Destructor
	/////////////////////////////////////////////////////////////////
	~ScoreManager();

	/////////////////////////////////////////////////////////////////
	// Release()  - release the objects memory
	/////////////////////////////////////////////////////////////////
	void Release();

public:
	/////////////////////////////////////////////////////////////////
	// GetInstance() - return the singleton inst of Score Mngr
	/////////////////////////////////////////////////////////////////
	static ScoreManager* GetInstance();

	/////////////////////////////////////////////////////////////////
	// ReleaseInst() - Release the Score manager singleton instance
	/////////////////////////////////////////////////////////////////
	static void ReleaseInst();

	/////////////////////////////////////////////////////////////////
	// Update() - update scrolling score list
	/////////////////////////////////////////////////////////////////
	void Update();

	/////////////////////////////////////////////////////////////////
	// AddScore() - add the given amount to the score total and list
	//
	// @param
	//    scr - score amount
	//    name - name of pokeman hit
	/////////////////////////////////////////////////////////////////
	void AddScore(int scr, String name);

	/////////////////////////////////////////////////////////////////
	// DeductScore() - random score deduction based off objects
	/////////////////////////////////////////////////////////////////
	void DeductScore();

	/////////////////////////////////////////////////////////////////
	// GetScore() - return the current score
	/////////////////////////////////////////////////////////////////
	int GetScore();

	/////////////////////////////////////////////////////////////////
	// GetReport() - UNIMPLEMENTED
	/////////////////////////////////////////////////////////////////
	void GetReport();

};





#endif /*_SCOREMANAGER_H_*/


