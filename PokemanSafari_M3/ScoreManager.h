/////////////////////////////////////////////////////////////////////
// File: ScoreManager.h
// DSA2 PokemanSafari_M1
// Authors:
//      Ilan Isakov
//		Marty Kurtz
//		Mary Spencer
//
// Description:
//
/////////////////////////////////////////////////////////////////////

#ifndef _SCOREMANAGER_H_
#define _SCOREMANAGER_H_

#include "RE\ReEng.h"
//#include "Character.h"

class ScoreManager
{
private:
	static ScoreManager* inst;

	int scoreCount;
	std::vector<int> scoreObjects;
	MeshManagerSingleton* m_pMeshMngr;

	/////////////////////////////////////////////////////////////////
	//  ScoreManager() - Private singleton constructor
	/////////////////////////////////////////////////////////////////
	ScoreManager();

public:
	/////////////////////////////////////////////////////////////////
	// GetInstance() - return the singleton inst of BO manager
	/////////////////////////////////////////////////////////////////
	static ScoreManager* GetInstance();

	/////////////////////////////////////////////////////////////////
	// ReleaseInst() - Release the BO manager singleton instance
	/////////////////////////////////////////////////////////////////
	static void ReleaseInst();

	/////////////////////////////////////////////////////////////////
	// ~BoundingObjectManager()
	/////////////////////////////////////////////////////////////////
	~ScoreManager();

	/////////////////////////////////////////////////////////////////
	// Update()
	/////////////////////////////////////////////////////////////////
	void Update();

	/////////////////////////////////////////////////////////////////
	// Increment() - temporary scoring function
	/////////////////////////////////////////////////////////////////
	void Increment();

	/////////////////////////////////////////////////////////////////
	// AddScore() - add the given amount to the score total and list
	/////////////////////////////////////////////////////////////////
	void AddScore(int scr);

	/////////////////////////////////////////////////////////////////
	//
	/////////////////////////////////////////////////////////////////
	void DeductScore();

	/////////////////////////////////////////////////////////////////
	// GetScore()
	/////////////////////////////////////////////////////////////////
	int GetScore();

	/////////////////////////////////////////////////////////////////
	// GetReport()
	/////////////////////////////////////////////////////////////////
	void GetReport();
	
	/////////////////////////////////////////////////////////////////
	// CaughtPokeman()
	/////////////////////////////////////////////////////////////////
	//void CaughtPokeman(Character* c);

	/////////////////////////////////////////////////////////////////
	// HitSpaceship()
	/////////////////////////////////////////////////////////////////
	//void HitSpaceship(Character *c);

	/////////////////////////////////////////////////////////////////
	// NetAttack()
	/////////////////////////////////////////////////////////////////
	void NetAttack();

};





#endif /*_SCOREMANAGER_H_*/


